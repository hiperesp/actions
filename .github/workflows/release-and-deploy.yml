---
name: 'Release and Deploy'

on:
  workflow_call:
    secrets:
      DOKKU_SSH_URL:
        required: true
      DOKKU_SSH_PRIVATE_KEY:
        required: true

jobs:

  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      -
        name: Cloning repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Fetching all tags
        run: |
          git fetch --prune --tags
      -
        name: Get Latest Release Tag
        run: |
          echo "LATEST_RELEASE_TAG=$(git tag | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -1)" >> $GITHUB_ENV
      -
        name: Create Next Release Details
        run: |
          NEW_RELEASE_TYPE=$(git log ${{ env.LATEST_RELEASE_TAG }}..HEAD --pretty=format:'%s' | grep -E '#(release|feat|feature|fix|patch|chore)' | head -1 | cut -d '#' -f 2)
          echo "NEW_RELEASE_NOTES<<EOF_RELEASE_NOTES" >> $GITHUB_ENV
          echo "$(git log ${{ env.LATEST_RELEASE_TAG }}..HEAD --pretty=format:'%s')" >> $GITHUB_ENV
          echo "EOF_RELEASE_NOTES" >> $GITHUB_ENV
          if [[ $NEW_RELEASE_TYPE == "chore" || $NEW_RELEASE_TYPE == "fix" || $NEW_RELEASE_TYPE == "patch" ]]; then
            echo "NEW_RELEASE_VERSION_NUMBER=$(echo ${{ env.LATEST_RELEASE_TAG }} | awk -F. -v OFS=. '{$NF++; print}')" >> $GITHUB_ENV
          elif [[ $NEW_RELEASE_TYPE == "feat" || $NEW_RELEASE_TYPE == "feature" ]]; then
            echo "NEW_RELEASE_VERSION_NUMBER=$(echo ${{ env.LATEST_RELEASE_TAG }} | awk -F. -v OFS=. '{$NF=0; $(NF-1)++; print}')" >> $GITHUB_ENV
          elif [[ $NEW_RELEASE_TYPE == "release" ]]; then
            echo "NEW_RELEASE_VERSION_NUMBER=$(echo ${{ env.LATEST_RELEASE_TAG }} | awk -F. -v OFS=. '{$NF=0; $(NF-1)=0; $(NF-2)++; print}')" >> $GITHUB_ENV
          else
            echo "NEW_RELEASE_VERSION_NUMBER=0.0.0" >> $GITHUB_ENV
          fi
      -
        name: Create Release
        uses: actions/create-release@v1
        if: ${{ env.NEW_RELEASE_VERSION_NUMBER != '0.0.0' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_RELEASE_VERSION_NUMBER }}
          release_name: Release ${{ env.NEW_RELEASE_VERSION_NUMBER }}
          body: ${{ env.NEW_RELEASE_NOTES }}
          draft: false
          prerelease: false
      -
        name: Production Deploy
        uses: dokku/github-action@master
        if: ${{ env.NEW_RELEASE_VERSION_NUMBER != '0.0.0' }}
        with:
          git_remote_url: ${{ secrets.DOKKU_SSH_URL }}
          ssh_private_key: ${{ secrets.DOKKU_SSH_PRIVATE_KEY }}
          git_push_flags: --force

